{"version":3,"file":"app-input-cuantia.js","sourceRoot":"","sources":["src/app-input-cuantia.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAC,IAAI,EAAC,MAAM,wBAAwB,CAAC;AAG5C,IAAa,eAAe,GAA5B,MAAa,eAAgB,SAAQ,UAAU;IAA/C;;QAaE,WAAM,GAAG,KAAK,CAAC;IAsCjB,CAAC;IApCU,MAAM;QACb,OAAO,IAAI,CAAA;;;sCAGuB,IAAI,CAAC,aAAa;UAC9C,IAAI,CACJ,IAAI,CAAC,MAAM,EACX,GAAG,EAAE,CAAC,IAAI,CAAA,6CAA6C,EACvD,GAAG,EAAE,CAAC,IAAI,CAAA,EAAE,CACb;;uBAEc,IAAI,CAAC,UAAU;KACjC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,KAAiB;QAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,MAA0B,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,OAAO;SACR;QAED,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,aAAa,EAAE;YAC3C,MAAM,EAAE;gBACN,MAAM,EAAE,IAAI,CAAC,OAAO;aACrB;SACF,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;CACF,CAAA;AAlDiB,sBAAM,GAAG,GAAG,CAAA;;;;;;;;;GAS1B,CAAA;AAVS,eAAe;IAD3B,aAAa,CAAC,mBAAmB,CAAC;GACtB,eAAe,CAmD3B;SAnDY,eAAe","sourcesContent":["import {LitElement, html, css} from 'lit';\r\nimport {customElement} from 'lit/decorators.js';\r\nimport {when} from 'lit/directives/when.js';\r\n\r\n@customElement('app-input-cuantia')\r\nexport class AppInputCuantia extends LitElement {\r\n  static override styles = css`\r\n    :host {\r\n      display: block;\r\n      text-align: center;\r\n    }\r\n    span {\r\n      display: block;\r\n      color: red;\r\n    }\r\n  `;\r\n\r\n  _amount!: number;\r\n  _error = false;\r\n\r\n  override render() {\r\n    return html`\r\n      <div>\r\n        <label>Monto de la cuantía (S/)</label>\r\n        <input type=\"number\" @input=${this._changeAmount} />\r\n        ${when(\r\n          this._error,\r\n          () => html`<span>Ingrese el monto de la cuantía</span>`,\r\n          () => html``\r\n        )}\r\n      </div>\r\n      <button @click=${this._calculate}>Realizar cálculo</button>\r\n    `;\r\n  }\r\n\r\n  _changeAmount(event: InputEvent) {\r\n    const input = event.target as HTMLInputElement;\r\n    this._error = false;\r\n    this._amount = Number(input.value);\r\n    this.requestUpdate();\r\n  }\r\n\r\n  _calculate() {\r\n    if (!this._amount) {\r\n      this._error = true;\r\n      this.requestUpdate();\r\n      return;\r\n    }\r\n\r\n    const event = new CustomEvent('onCalculate', {\r\n      detail: {\r\n        amount: this._amount,\r\n      },\r\n    });\r\n    this.dispatchEvent(event);\r\n  }\r\n}\r\n"]}