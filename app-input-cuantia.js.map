{"version":3,"file":"app-input-cuantia.js","sourceRoot":"","sources":["src/app-input-cuantia.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,IAAI,EAAE,MAAM,wBAAwB,CAAC;AAG9C,IAAa,eAAe,GAA5B,MAAa,eAAgB,SAAQ,UAAU;IAA/C;;QA+DE,WAAM,GAAG,KAAK,CAAC;IAsCjB,CAAC;IApCU,MAAM;QACb,OAAO,IAAI,CAAA;;;4DAG6C,IAAI,CAAC,aAAa;UACpE,IAAI,CACR,IAAI,CAAC,MAAM,EACX,GAAG,EAAE,CAAC,IAAI,CAAA,6CAA6C,EACvD,GAAG,EAAE,CAAC,IAAI,CAAA,EAAE,CACb;2CACsC,IAAI,CAAC,UAAU;;KAErD,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,KAAiB;QAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,MAA0B,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,OAAO;SACR;QAED,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,aAAa,EAAE;YAC3C,MAAM,EAAE;gBACN,MAAM,EAAE,IAAI,CAAC,OAAO;aACrB;SACF,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;CACF,CAAA;AApGiB,sBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2D1B,CAAA;AA5DS,eAAe;IAD3B,aAAa,CAAC,mBAAmB,CAAC;GACtB,eAAe,CAqG3B;SArGY,eAAe","sourcesContent":["import { LitElement, html, css } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\nimport { when } from 'lit/directives/when.js';\r\n\r\n@customElement('app-input-cuantia')\r\nexport class AppInputCuantia extends LitElement {\r\n  static override styles = css`\r\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,500;0,600;0,700;0,800;0,900;1,500;1,900&display=swap');      \r\n  :host {\r\n    display: block;\r\n    text-align: center;\r\n    font-family: 'Poppins', sans-serif;\r\n    position: fixed;\r\n    bottom: 0px;\r\n    padding-bottom: 7rem;\r\n    width: 100%;\r\n    background-color: white;\r\n    border-radius: 4rem 4rem 0rem 0rem;\r\n    padding-top: 3rem;\r\n    transition: all 1.3s;\r\n  }\r\n  span {\r\n    display: block;\r\n    color: red;    \r\n  }\r\n  .contenedor{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    align-content: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .label-cuantia{\r\n    font-size: 1.8rem;\r\n    color: #52a7fe;\r\n    font-weight: bold;\r\n  }\r\n  .input-cuantia{\r\n    color: #333;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 1.5rem;\r\n    padding: 1.5rem 2rem;\r\n    border-radius: 1.2rem;\r\n    border-color: #e7e9ed;\r\n    background-color: rgb(255, 255, 255);\r\n    border: none;           \r\n    width: 70%;\r\n    display: block;\r\n    border-bottom: 0.3rem solid transparent;\r\n    transition: all 0.3s;\r\n    box-shadow: 0px 0px 20px 0px #0000001f;\r\n  }\r\n  .btn-cuantia{\r\n    width: 77%;\r\n    display: block;\r\n    font-size: 1.5rem;\r\n    padding: 1.5rem 2rem;\r\n    border-radius: 1.2rem;\r\n    border: none;  \r\n    background-color: #52a7fe;\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n  }    \r\n  `;\r\n\r\n  _amount!: number;\r\n  _error = false;\r\n\r\n  override render() {\r\n    return html`\r\n      <div class=\"contenedor\">\r\n        <label class=\"label-cuantia\">Monto de la cuantía (S/)</label> <br>\r\n        <input class=\"input-cuantia\" type=\"number\" @input=${this._changeAmount} />\r\n        ${when(\r\n      this._error,\r\n      () => html`<span>Ingrese el monto de la cuantía</span>`,\r\n      () => html``\r\n    )}\r\n      <button class=\"btn-cuantia\" @click=${this._calculate}>Realizar cálculo</button>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  _changeAmount(event: InputEvent) {\r\n    const input = event.target as HTMLInputElement;\r\n    this._error = false;\r\n    this._amount = Number(input.value);\r\n    this.requestUpdate();\r\n  }\r\n\r\n  _calculate() {\r\n    if (!this._amount) {\r\n      this._error = true;\r\n      this.requestUpdate();\r\n      return;\r\n    }\r\n\r\n    const event = new CustomEvent('onCalculate', {\r\n      detail: {\r\n        amount: this._amount,\r\n      },\r\n    });\r\n    this.dispatchEvent(event);\r\n  }\r\n}\r\n"]}